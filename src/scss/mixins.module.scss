// Media queries

/*
0-768px    Phone
768px-1024px   Tablet
1024px-1600px   Desktop (where all normal scss apply)
1600px+          Big Desktop
*/

/* $breakpoint argument choices:
- phone
- tab
- desktop
- big-desktop
*/

@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media (max-width: 48em) {
      // 0px - 768px
      @content;
    }
  }
  @if $breakpoint == tab {
    @media (max-width: 64em) {
      // 768px - 1024px
      @content;
    }
  }
  @if $breakpoint == desktop {
    @media (max-width: 100em) {
      // 1024px - 1600px
      @content;
    }
  }
  @if $breakpoint == big-desktop {
    @media (min-width: 100em) {
      // 1600px+
      @content;
    }
  }
}

// Positioning queries

@mixin flex-grid-horizontal($justify-content: center, $align-items: center, $flex-direction: row) {
  display: flex;
  justify-content: $justify-content;
  align-items: $align-items;
  flex-direction: $flex-direction;

  @include respond(phone){
    flex-direction: column;
  }
}

@mixin flex-grid-vertical($justify-content: center, $align-items: center, $flex-direction: column) {
  display: flex;
  justify-content: $justify-content;
  align-items: $align-items;
  flex-direction: $flex-direction;
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin full-viewport {
  height: 100vh;
  width: 100vw;
}

@mixin shape($height, $width, $borderRadius, $color) {
  height: $height;
  width: $width;
  border-radius: $borderRadius;
  background-color: $color;
}

